{"version":3,"sources":["Components/UI/ErrorModal.module.css","Components/Api/Api.js","Components/UI/Button.js","Components/UI/ErrorModal.js","Components/UI/InputForm.js","Components/Images/ImageList.js","App.js","reportWebVitals.js","index.js","Components/UI/InputForm.module.css","Components/Images/ImageList.module.css"],"names":["module","exports","SearchImage","query","useState","useImage","setImage","loading","setLoading","useEffect","a","axios","get","then","image","data","fetchData","Button","props","className","class","type","onClick","children","ErrorModal","classes","backdrop","onConfirm","modal","header","title","content","message","actions","btn","InputForm","enteredImageId","setEnteredImageId","error","setError","search","onSubmit","e","preventDefault","trim","length","onAddId","formsearch","id","value","onChange","target","searchtxt","placeholder","searchbtn","usersList","layout","map","key","imgthimb","img","src","url","alt","Skeleton","variant","width","height","App","inputQuery","setInputQuery","idFromInput","ImageList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe57d3d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ErrorModal_backdrop__3dCLx\",\"modal\":\"ErrorModal_modal__hkIiO\",\"header\":\"ErrorModal_header__1_jKL\",\"content\":\"ErrorModal_content__38oIg\",\"actions\":\"ErrorModal_actions__3mDff\",\"btn\":\"ErrorModal_btn__3Nm_Z\",\"button\":\"ErrorModal_button__HrwXj\"};","import { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n// search image function that fetch images from API\r\nconst SearchImage=(query)=>{\r\n    const [useImage,setImage]=useState([]);\r\n    const [loading,setLoading]=useState(false);\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n        const fetchData= async ()=>{\r\n            setLoading(true);\r\n        try {\r\n            await\r\n            axios.get(`https://find-images-backend.herokuapp.com/id?id=${query} `)\r\n            .then(image=>{\r\n                setImage(image.data);\r\n            })\r\n            setLoading(false);\r\n        } catch(err){\r\n          setLoading(false);\r\n         \r\n        }\r\n    }\r\n\r\n    fetchData();\r\n    },[query]);   \r\n    return {useImage,loading};\r\n    \r\n    }\r\nexport default SearchImage;","// import classes from './Button.module.css';\r\nconst Button=props=>{\r\n\r\nreturn <button className={props.class} \r\ntype={props.type || 'button'} \r\nonClick={props.onClick}>\r\n{props.children}\r\n</button>\r\n\r\n}\r\nexport default Button;","import Button from './Button'\r\nimport classes from './ErrorModal.module.css'\r\nconst ErrorModal=(props)=>{\r\n\r\nreturn <div>\r\n    <div className={classes.backdrop} onClick={props.onConfirm}></div>\r\n    <div className={classes.modal}>\r\n    <header className={classes.header}><h2>{props.title}</h2></header>\r\n    <section className={classes.content}><p>{props.message}</p></section>\r\n    <footer className={classes.actions}><Button class={classes.btn} onClick={props.onConfirm}>Retry</Button></footer>\r\n    </div>\r\n    </div>\r\n\r\n}\r\nexport default ErrorModal;","import React, { useState,Fragment } from \"react\";\r\nimport ErrorModal from \"./ErrorModal\";\r\nimport classes from './InputForm.module.css';\r\nimport Button from \"./Button\";\r\n\r\nconst InputForm =props=>{\r\nconst [enteredImageId,setEnteredImageId]=useState('');\r\nconst [error,setError]=useState('');\r\n\r\nconst searchHandler=e=>{\r\n    e.preventDefault()\r\n    if(enteredImageId<=0){\r\n        setError({\r\n            title:'Invalid Input',\r\n            message:'Album id should not be less than or equal to 0'\r\n        })\r\n        return;\r\n    };\r\n    if(enteredImageId.trim().length <0 ){\r\n        setError({\r\n            title:'Invalid Input',\r\n            message:'Please input a valid album id number'\r\n        })\r\n        return;\r\n    };\r\n    props.onAddId(enteredImageId);\r\n    setEnteredImageId('');\r\n}\r\n\r\nconst searchChangeHandler=(e)=>{\r\n    setEnteredImageId(e.target.value)\r\n}\r\n\r\nconst ErrorHandler=()=>{\r\nsetError(null)\r\n}\r\n\r\nreturn (\r\n    <Fragment>\r\n    {error && <ErrorModal \r\n    title={error.title} \r\n    message={error.message} \r\n    onConfirm={ErrorHandler}\r\n    />}\r\n    <div className={classes.search}>\r\n        \r\n    <form onSubmit={searchHandler} className={classes.formsearch}>\r\n    <h1>IMAGE ALBUM FINDER</h1>\r\n            <input id='imageId' type=\"number\" \r\n            value={enteredImageId} \r\n            onChange={searchChangeHandler}\r\n            className={classes.searchtxt} \r\n            placeholder='Search album by id number ...' />\r\n            <Button type=\"submit\" class={classes.searchbtn}>Search</Button>\r\n    </form>\r\n    </div>\r\n    </Fragment>)\r\n}\r\nexport default InputForm;","import React from \"react\";\r\nimport classes from './ImageList.module.css'\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst usersList=(props)=>{\r\nconst loading=props.data.loading;\r\nreturn <div className={classes.layout}>\r\n    {!loading && props.data.useImage.map((data,key)=>{\r\n\r\n     return <div key={key} className={classes.imgthimb}>\r\n       <h4>{data.title}</h4>\r\n       <img className={classes.img} src={data.url} alt=\"\" />\r\n       </div>\r\n    })}\r\n\r\n  \r\n    {loading && [1,2,3,4,5,6,7,9,10,11,12,13,14,15,16]\r\n    .map(key=>{\r\n    \r\n      return <div key={key} >\r\n        <div className={classes.img}>\r\n          \r\n          <Skeleton variant=\"rect\" width={410} height={318}/>\r\n        \r\n   \r\n      </div>\r\n      \r\n    </div>\r\n   \r\n    })}\r\n    </div>\r\n\r\n}\r\nexport default usersList;","import { useState,Fragment } from \"react\";\r\nimport SearchImage from './Components/Api/Api';\r\nimport InputForm from \"./Components/UI/InputForm\";\r\nimport ImageList from \"./Components/Images/ImageList\";\r\n\r\n\r\nfunction App() {\r\n  const [inputQuery,setInputQuery]=useState([]);\r\n  const data=SearchImage(inputQuery);\r\n\r\n  const getIdFromInput=(idFromInput)=>{\r\n  setInputQuery(idFromInput)\r\n  }\r\n\r\n  return(<Fragment>\r\n\r\n    <InputForm onAddId={getIdFromInput} />\r\n    <ImageList data={data} />\r\n  \r\n    </Fragment>\r\n  )\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formsearch\":\"InputForm_formsearch__1mJ_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"ImageList_layout__2tBAZ\",\"imgthimb\":\"ImageList_imgthimb__q4rFB\",\"img\":\"ImageList_img__3aY6v\"};"],"sourceRoot":""}